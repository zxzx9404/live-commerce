pipeline {
    agent any

    stages {
        stage("git"){ //git에 브랜치 url, credentialsId는 젠킨스에 등록한 인증으로 
            steps{
                git branch: 'develop', credentialsId: 'gitlab', url: 'https://lab.ssafy.com/s08-webmobile1-sub2/S08P12A405.git'
            }
        }
        stage('Backend') {
            steps{
                sh "ls -a"
                dir('backend') { //gradle 권한 설정 후 gradle로 도커 이미지 빌드하는 명령어 실행 
                    dir('bangbang') {
                        script{
                            try{
                                sh "chmod +x gradlew"
                                sh "./gradlew bootBuildImage --imageName=spring"
                            } catch(e){
                                echo "fail build"
                            }
                        }
                        script{ //이미 실행 중인 컨테이너가 있으면 중지 후 삭제
                            try{
                                sh "docker stop spring"
                                sh "docker rm spring"
                            } catch(e){
                                echo "container none"
                            }
                        } //8083 포트에서 spring이라는 이미지를 spring이라는 컨테이너이름으로 설정해서 실행
                        sh "docker run -d -p 8081:8081 --name spring spring "
                    }
                }
            }

        }

        stage('front') {
            steps {
                script{
                    sh "ls -a"
                    dir('frontend') {
                        dir('front') {
                            sh "ls -a"
                            sh 'docker build -t front ./'
                        }
                    }
                }
                script {
                    try {
                        sh 'docker stop front'
                        sh 'docker rm front'
                    } catch(e) {
                        echo "container none"
                    }
                    sh 'docker run -d --name front -p 3000:3000 front'
                }
            }
        }
    }
}
